"""Enhanced challenges with teams, invitations, and comments

Revision ID: enhanced_challenges_001
Revises: daily_streaks_001
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'enhanced_challenges_001'
down_revision = 'daily_streaks_001'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to challenges table
    op.add_column('challenges', sa.Column('created_by_user_id', sa.Integer(), nullable=True))
    op.add_column('challenges', sa.Column('is_public', sa.Boolean(), nullable=True, default=True))
    op.add_column('challenges', sa.Column('max_participants', sa.Integer(), nullable=True))
    op.add_column('challenges', sa.Column('difficulty_level', sa.String(), nullable=True, default='medium'))
    op.add_column('challenges', sa.Column('reward_points', sa.Integer(), nullable=True, default=0))
    op.add_column('challenges', sa.Column('reward_xp', sa.Integer(), nullable=True, default=0))
    op.add_column('challenges', sa.Column('category', sa.String(), nullable=True))
    op.add_column('challenges', sa.Column('is_team_challenge', sa.Boolean(), nullable=True, default=False))
    op.add_column('challenges', sa.Column('team_size', sa.Integer(), nullable=True, default=1))
    op.add_column('challenges', sa.Column('entry_fee_points', sa.Integer(), nullable=True, default=0))
    op.add_column('challenges', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('challenges', sa.Column('updated_at', sa.DateTime(), nullable=True))
    
    # Add foreign key constraint
    op.create_foreign_key('fk_challenges_created_by_user', 'challenges', 'users', ['created_by_user_id'], ['id'])
    
    # Add new columns to user_challenges table
    op.add_column('user_challenges', sa.Column('joined_at', sa.DateTime(), nullable=True))
    op.add_column('user_challenges', sa.Column('is_abandoned', sa.Boolean(), nullable=True, default=False))
    op.add_column('user_challenges', sa.Column('abandoned_at', sa.DateTime(), nullable=True))
    op.add_column('user_challenges', sa.Column('final_rank', sa.Integer(), nullable=True))
    op.add_column('user_challenges', sa.Column('points_earned', sa.Integer(), nullable=True, default=0))
    op.add_column('user_challenges', sa.Column('xp_earned', sa.Integer(), nullable=True, default=0))
    op.add_column('user_challenges', sa.Column('team_id', sa.Integer(), nullable=True))
    
    # Create challenge_teams table
    op.create_table('challenge_teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('leader_id', sa.Integer(), nullable=False),
    sa.Column('total_progress', sa.Float(), nullable=True, default=0.0),
    sa.Column('is_completed', sa.Boolean(), nullable=True, default=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['leader_id'], ['users.id']),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_challenge_teams_id'), 'challenge_teams', ['id'], unique=False)
    
    # Create challenge_invitations table
    op.create_table('challenge_invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('invitee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True, default='pending'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('responded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_challenge_invitations_id'), 'challenge_invitations', ['id'], unique=False)
    
    # Create challenge_comments table
    op.create_table('challenge_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_challenge_comments_id'), 'challenge_comments', ['id'], unique=False)
    
    # Add foreign key constraint for team_id in user_challenges
    op.create_foreign_key('fk_user_challenges_team', 'user_challenges', 'challenge_teams', ['team_id'], ['id'])
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop foreign key constraints
    op.drop_constraint('fk_user_challenges_team', 'user_challenges', type_='foreignkey')
    op.drop_constraint('fk_challenges_created_by_user', 'challenges', type_='foreignkey')
    
    # Drop new tables
    op.drop_index(op.f('ix_challenge_comments_id'), table_name='challenge_comments')
    op.drop_table('challenge_comments')
    op.drop_index(op.f('ix_challenge_invitations_id'), table_name='challenge_invitations')
    op.drop_table('challenge_invitations')
    op.drop_index(op.f('ix_challenge_teams_id'), table_name='challenge_teams')
    op.drop_table('challenge_teams')
    
    # Drop new columns from user_challenges
    op.drop_column('user_challenges', 'team_id')
    op.drop_column('user_challenges', 'xp_earned')
    op.drop_column('user_challenges', 'points_earned')
    op.drop_column('user_challenges', 'final_rank')
    op.drop_column('user_challenges', 'abandoned_at')
    op.drop_column('user_challenges', 'is_abandoned')
    op.drop_column('user_challenges', 'joined_at')
    
    # Drop new columns from challenges
    op.drop_column('challenges', 'updated_at')
    op.drop_column('challenges', 'created_at')
    op.drop_column('challenges', 'entry_fee_points')
    op.drop_column('challenges', 'team_size')
    op.drop_column('challenges', 'is_team_challenge')
    op.drop_column('challenges', 'category')
    op.drop_column('challenges', 'reward_xp')
    op.drop_column('challenges', 'reward_points')
    op.drop_column('challenges', 'difficulty_level')
    op.drop_column('challenges', 'max_participants')
    op.drop_column('challenges', 'is_public')
    op.drop_column('challenges', 'created_by_user_id')
    
    # ### end Alembic commands ### 